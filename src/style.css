/* style.css */

@import url("./reset.css");

/* variables */
:root {
    --color-main: forestgreen;
    --color-sec: white;
    --spacing: 1rem;
    --padding: 1rem;
    --font-family-main: Arial, Helvetica, sans-serif;
    
    /* testing */
    * {
        /* outline: solid red 1px; */
    }
}

body {
    background-color: var(--color-main);
    color: white;
    font-size: 1rem;
    font-family: var(--font-family-main);

    display: grid;
    /* set max width on first column? changes with project input */
    grid-template-columns: minmax(max-content, 25%) minmax(max-content, 75%); 
    grid-template-rows: auto 1fr;

    /* set min-height so side bar can always fill up page vertically */
    min-height: 100vh;
    min-width: max-content;
}

#header {
    grid-column: span 2;

    #title-main {
        justify-self: end;
    }
}

#sidebar {
    background-color: var(--color-sec);
    color: var(--color-main);

    margin-left: var(--padding);
    margin-bottom: var(--padding);

    /* min-width: min-content; */

    .title-sec {
        justify-self: center;
        margin-bottom: var(--padding);
    }
    
    input, 
    .sidebar-proj-list-name,
    .del-val-name {
        font-size: larger;
    }

    .del-confirm-message {
        margin-left: calc(0.5 * var(--padding));
    }

    #projects-list {
        /* margin-left: calc(2 * var(--padding)); */
        /* font-size: large; */



        
        .sidebar-project-li {
            width: 100%;

            margin-bottom: calc(0.5 * var(--spacing));
            
            .sidebar-proj-list-line {
                display: grid;
                grid-template-columns: auto 1fr min-content min-content;

                gap: calc(0.25 * var(--padding));


                .spacer {
                    border-bottom: 1px solid var(--color-main);
                    /* margin: 0 calc(0.5 * var(--spacing)); */
                    margin-bottom: calc(0.9 * var(--spacing));

                    /* alternate idea for the spacer line, not sure if these will break */
                    /* outline: 1px solid var(--color-main);   */
                    /* outline-offset: calc(-1 * var(--spacing));      */
                    /* could also make a 1px high box inside of spacer and justify/align to center*/
                }

            }
        }
    }

    /* project-edit-line */
    #add-project-btn-wrappper + .confirm-cancel-line {
        margin-left: var(--spacing);
    }
    
    #add-project-btn-wrappper {
        justify-self: center;
        /* margin-top: var(--spacing); */

        #add-project-btn {
            background-color: var(--color-main);
            
            border: none;
            --btn-size: calc(2 * var(--spacing));
            
            height: var(--btn-size);
            width: var(--btn-size);
            
            border-radius: 50%;
            
            /* need shift btn txt */
            div {
                position: relative;
                top: -8px;

                font-size: xx-large;
                color: var(--color-sec);
            }

        }


    }
}
/* set first childs of todo data line to large font */
#main-content {
    padding-top: calc(-1 * var(--padding));

    display: grid;
    gap: var(--padding);
    align-content: start;

    .todo-card {
        background-color: var(--color-sec);
        color: var(--color-main);

        padding: var(--padding);

        max-height: max-content;
    }

    .todo-card.high-priority {
        background-color: firebrick;
        color: var(--color-sec);
    }

    .todo-card.med-priority {
        background-color: rgb(238, 131, 0);
        color: var(--color-sec);
    }

    .todo-card.low-priority {
        background-color: rgb(255, 225, 58);
    }

    .todo-card.done-priority {
        background-color: lightgreen;
    }
        

    /* def-todo-card non-detailed display */
    .def-todo-card-abridged {
        #default-card-form-wrapper {
            display: none;
        }

    }
}


/* ============================================ Catch All ============================================ */

.confirm-cancel-line {
    button {
        margin-left:  calc(0.25 * var(--padding));
    }
}

.del-confirm-message {
    font-style: italic;
}

.del-val-name {
    text-decoration: line-through;
}

input {
    border: none;
}

/* buttons========================== */
button:hover {
    transform: scale(1.1);
    /* border: black solid 1px; */
}

.confirm-btn {
    background-color: var(--color-main);
    color: var(--color-sec);
    
    font-size: smaller;
    font-weight: bold;
    
    --btn-size: calc(1.25 * var(--spacing));
    height: var(--btn-size);
    width: var(--btn-size);
    
    border: none;
    border-radius: 50%;
}

.cancel-btn {
    background-color: dodgerblue;
    color: var(--color-sec);
    
    font-size: smaller;
    /* font-weight: bolder; */
    
    --btn-size: calc(1.25 * var(--spacing));
    height: var(--btn-size);
    width: var(--btn-size);
    
    border: none;
    border-radius: 50%;

    transform: scale(1.05);
}

.edit-btn {
    background-color: dodgerblue;
    color: var(--color-sec);
    
    font-size: smaller;
    
    --btn-size: calc(1.25 * var(--spacing));
    height: var(--btn-size);
    width: var(--btn-size);
    
    border: none;
    border-radius: 50%;
}

.del-btn {
    background-color: red;
    color: var(--color-sec);
    
    font-size: smaller;
    font-weight: bolder;
    
    --btn-size: calc(1.25 * var(--spacing));
    height: var(--btn-size);
    width: var(--btn-size);
    
    border: none;
    border-radius: 50%;
}

/* elms that need to stay on same line (usually from swapOutLine() */
.todo-data-line > *:first-child /* first elm of todo-data-line (to add edit btn) */
{
    display: inline;
}